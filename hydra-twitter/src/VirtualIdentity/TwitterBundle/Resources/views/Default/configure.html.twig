{% extends 'VirtualIdentityTwitterBundle::base.html.twig' %}

{% block title %} configuration{% endblock %}

{% block head %}
    <script>
        (function($) {

            // keep track of how many email fields have been rendered
            var apiRequestsCount = '{{ form.apiRequests | length }}';

            $(document).ready(function() {
                var entitySelected = function() {
                    var path = '{{ path('virtual_identity_twitter_get_fields', {'entity': '__name__'}) }}';
                    var url = path.replace(/__name__/g, $(this).val());
                    var $select = $(this);
                    $.ajax(url).done(function(data) {
                        $orderField = $select.parents('.input-group').find('select[name*="orderField"]');
                        $orderField.html('');
                        for (var i in data) {
                            $orderField.append(new Option(data[i], i));
                        }
                    });
                };

                $('#add-another-api-request').click(function() {
                    var apiRequestList = $('#api-requests-list');

                    // grab the prototype template
                    var newWidget = apiRequestList.attr('data-prototype');
                    // replace the "__name__" used in the id and name of the prototype
                    // with a number that's unique to your emails
                    // end name attribute looks like name="contact[emails][2]"
                    newWidget = newWidget.replace(/__name__/g, apiRequestsCount);
                    apiRequestsCount++;

                    // create a new list element and add it to the list
                    var newLi = $('<li class="list-group-item"><div class="input-group"></div></li>');
                    newLi.find('div').
                        html(newWidget).
                        append('<span class="input-group-addon"><a href="javascript://" onclick="jQuery(this).parents(\'li\').remove()">✘</a></span>');
                    newLi.appendTo($('#api-requests-list'));
                    newLi.find('select[name*="mappedEntity"]').change(entitySelected);
                    newLi.find('select[name*="mappedEntity"]').change();

                    return false;
                });
                $('#twitter-authorize').click(function() {
                    window.open('{{ url('virtual_identity_twitter_authorize') }}', 'twitterAuthorization', 'width=640,height=480,scrollbars=no,menubar=no,toolbar=no,status=no,location=no,resizable=yes');
                    return false;
                });
                $('#api-requests-list select[name*="mappedEntity"]').change(entitySelected);
            });
        })(jQuery);
    </script>
    <style>
        /** TODO: this css settings are akward! use bootstrap styling for the inner form **/

        #api-requests-list .input-group label {
            width: 200px;
        }
        #api-requests-list .input-group input, #api-requests-list .input-group select {
            width: 300px;
        }
    </style>
{% endblock %}

{% block body %}
            <div class="col-lg-8">
                <header>
                    <h1>virtual-identity Hydra Twitter configuration</h1>
                    <h3>Status:
                    {% if credentialsValid %}
                        <span class="label label-success">Credentials are valid</span>
                    {% else %}
                        <span class="label label-danger">Credentials are either incorrectly configured or not valid anymore</span>
                    {% endif %}
                    </h3>
                </header>
            </div>
            <div class="col-lg-4" style="padding-top: 2em">
                {% include 'VirtualIdentityTwitterBundle::nav.html.twig' with {'active': 'configure', 'credentialsValid': credentialsValid} %}
            </div>
        </div>
        <div class="row">
            <div class="col-lg-8">

                <section>
                {{ form_start(form) }}
                    <fieldset>

                        {# store the prototype on the data-prototype attribute #}
                        <ul id="api-requests-list" data-prototype="{{ form_widget(form.apiRequests.vars.prototype, {'attr': {'class': 'form-control'}}) | e }}" class="list-group">
                            <li class="list-group-item">
                                {{ form_label(form.apiRequests) }}
                                <button type="button" class="btn btn-default btn-mini" id="add-another-api-request">Add API request URL</button>
                            </li>
                        {% for apiRequest in form.apiRequests %}
                            <li class="list-group-item">
                                <div class="input-group">
                                    {{ form_errors(apiRequest) }}
                                    {{ form_widget(apiRequest, {'attr': {'class': 'form-control'}}) }}
                                    <span class="input-group-addon"><a href="javascript://" onclick="jQuery(this).parents('li').remove()">✘</a></span>
                                </div>
                            </li>
                        {% endfor %}
                        </ul>
                        {% if form.apiRequests.count == 0 %}
                        <div style="display:none">{{ form_widget(form.apiRequests) }}</div>
                        {% endif %}

                        <div class="form-group">
                            {{ form_errors(form.consumerKey) }}
                            {{ form_label(form.consumerKey) }}
                            {{ form_widget(form.consumerKey, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_errors(form.consumerSecret) }}
                            {{ form_label(form.consumerSecret) }}
                            {{ form_widget(form.consumerSecret, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_errors(form.token) }}
                            {{ form_label(form.token) }}
                            {{ form_widget(form.token, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        <div class="form-group">
                            {{ form_errors(form.secret) }}
                            {{ form_label(form.secret) }}
                            {{ form_widget(form.secret, {'attr': {'class': 'form-control'}}) }}
                        </div>

                        {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}

                        {% if form.consumerKey.vars.value is empty or form.consumerSecret.vars.value is empty %}
                        Fill out consumer key and secret to get the Twitter sign-in button!
                        {% else %}
                        <button type="button" id="twitter-authorize" style="border:none;background:none"><img src="{{asset('bundles/virtualidentitytwitter/images/sign-in-with-twitter-gray.png')}}" /></button>
                        {% endif %}

                    </fieldset>
                {{ form_end(form) }}
                </section>

            </div>
            <div class="col-lg-4">
                <aside>
                    <h3>Help</h3>
                    <p>
                        You can obtain the consumer key and secret from the "Settings" page from your
                        Twitter application: <a href="https://dev.twitter.com/apps">https://dev.twitter.com/apps</a>
                    </p>
                    <p>
                        Be sure you fill out the "Callback URL" correctly. Eg.
                        https://yourdomain.com/aggregator/app_dev.php/hydra/twitter/callbackurl
                    <p>
                        After you filled those fields and saved the configuration you can press
                        the "Sign in with Twitter" to obtain your long term access token and secret.
                    </p>
                </aside>
            </div>
{% endblock %}
